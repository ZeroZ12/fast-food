@model List<Fast_Food.Models.HoaDon>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center">@TempData["SuccessMessage"]</div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger text-center">@TempData["ErrorMessage"]</div>
}
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Qu·∫£n l√Ω h√≥a ƒë∆°n</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div id="alertContainer" class="alert-container"></div>

    <div class="container-fluid px-4 py-4">
        <!-- Page Header -->
        <div class="page-header mb-4">
            <div class="d-flex justify-content-between align-items-center flex-wrap">
                <h2 class="fw-bold text-primary mb-0">
                    <i class="bi bi-receipt-cutoff me-2"></i>Qu·∫£n l√Ω h√≥a ƒë∆°n
                </h2>
                <div class="search-container">
                    <div class="input-group">
                        <span class="input-group-text bg-white border-end-0">
                            <i class="bi bi-search"></i>
                        </span>
                        <input type="text" id="searchInput" class="form-control border-start-0" placeholder="T√¨m ki·∫øm ƒë∆°n h√†ng...">
                    </div>
                </div>
            </div>
        </div>

        <!-- Dashboard Summary -->
        <div class="dashboard-summary mb-4">
            <div class="row g-3">
                <div class="col-md-3 col-sm-6">
                    <div class="summary-card bg-primary text-white">
                        <div class="summary-icon">
                            <i class="bi bi-receipt"></i>
                        </div>
                        <div class="summary-info">
                            <h3 id="totalOrders">0</h3>
                            <p>T·ªïng ƒë∆°n h√†ng</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="summary-card bg-warning text-dark">
                        <div class="summary-icon">
                            <i class="bi bi-hourglass-split"></i>
                        </div>
                        <div class="summary-info">
                            <h3 id="pendingOrders">0</h3>
                            <p>ƒê∆°n ƒëang x·ª≠ l√Ω</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="summary-card bg-success text-white">
                        <div class="summary-icon">
                            <i class="bi bi-check-circle"></i>
                        </div>
                        <div class="summary-info">
                            <h3 id="completedOrders">0</h3>
                            <p>ƒê∆°n ho√†n th√†nh</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="summary-card bg-danger text-white">
                        <div class="summary-icon">
                            <i class="bi bi-x-circle"></i>
                        </div>
                        <div class="summary-info">
                            <h3 id="canceledOrders">0</h3>
                            <p>ƒê∆°n ƒë√£ h·ªßy</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filter Buttons -->
        <div class="filter-container mb-4">
            <div class="filter-label">
                <i class="bi bi-funnel me-2"></i>L·ªçc theo tr·∫°ng th√°i:
            </div>
            <div class="filter-buttons">
                <button class="filter-btn active" data-status="all">
                    <i class="bi bi-grid-3x3-gap me-1"></i>T·∫§T C·∫¢
                </button>
                <button class="filter-btn" data-status="Preparing">
                    <i class="bi bi-hourglass-split me-1"></i>ƒêANG CHU·∫®N B·ªä
                </button>
                <button class="filter-btn" data-status="Shipping">
                    <i class="bi bi-truck me-1"></i>ƒêANG GIAO H√ÄNG
                </button>
                <button class="filter-btn" data-status="DaThanhToan">
                    <i class="bi bi-credit-card me-1"></i>ƒê√É THANH TO√ÅN
                </button>
                <button class="filter-btn" data-status="HoanThanh">
                    <i class="bi bi-check-circle me-1"></i>HO√ÄN TH√ÄNH
                </button>
                <button class="filter-btn" data-status="Canceled">
                    <i class="bi bi-x-circle me-1"></i>ƒê√É H·ª¶Y
                </button>
            </div>
        </div>

        <!-- Orders Table -->
        <div class="card shadow-sm border-0">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead>
                            <tr>
                                <th>M√£ Hƒê</th>
                                <th>Kh√°ch H√†ng</th>
                                <th>Chi Ti·∫øt</th>
                                <th>Th·ªùi Gian ƒê·∫∑t</th>
                                <th>Th·ªùi Gian K·∫øt Th√∫c</th>
                                <th>Tr·∫°ng Th√°i</th>
                                <th>T·ªïng Ti·ªÅn</th>
                                <th>H√†nh ƒê·ªông</th>
                            </tr>
                        </thead>
                        <tbody id="orderTableBody">
                            @foreach (var hd in Model)
                            {
                                string badgeClass = hd.TrangThaiDonHang switch
                                {
                                    "ƒêang chu·∫©n b·ªã" => "badge-preparing",
                                    "ƒêang giao h√†ng" => "badge-shipping",
                                    "ƒê√£ thanh to√°n" => "badge-paid",
                                    "Ho√†n th√†nh" => "badge-completed",
                                    "ƒê√£ h·ªßy" => "badge-canceled",
                                    _ => ""
                                };
                                <tr>
                                    <td>@hd.MaHoaDon</td>
                                    <td>
                                        <a asp-action="Details" asp-controller="KhachHangs" asp-route-id="@hd.MaKhachHang" class="text-decoration-none">
                                            @hd.MaKhachHangNavigation?.TenKhachHang
                                        </a>
                                    </td>
                                    <td>
                                        <a class="btn btn-sm btn-outline-info" href="/HoaDons/Details/@hd.MaHoaDon">
                                            Xem chi ti·∫øt
                                        </a>
                                    </td>
                                    <td>@hd.ThoiGianDat.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>@hd.ThoiGianKetThuc?.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>
                                        <span class="badge @badgeClass">@hd.TrangThaiDonHang</span>
                                    </td>
                                    <td>@hd.TongTien?.ToString("N3") ‚Ç´</td>
                                    <td>
                                        @if (hd.TrangThaiDonHang == "Ch·ªù x√°c nh·∫≠n" || hd.TrangThaiDonHang == "ƒêang chu·∫©n b·ªã" || hd.TrangThaiDonHang == "ƒê√£ h·ªßy" ||
                                       hd.TrangThaiDonHang == "ƒêang giao h√†ng" || hd.TrangThaiDonHang == "ƒê√£ thanh to√°n" || hd.TrangThaiDonHang == "ƒê√£ h·ªßy")
                                        {
                                            <form asp-action="CapNhatTrangThai" method="post">
                                                <input type="hidden" name="id" value="@hd.MaHoaDon" />
                                                <button type="submit" class="btn btn-warning">
                                                    üîÑ C·∫≠p nh·∫≠t tr·∫°ng th√°i
                                                </button>
                                            </form>
                                        }
                                        @if (hd.TrangThaiDonHang == "Ch·ªù x√°c nh·∫≠n" || hd.TrangThaiDonHang == "ƒêang chu·∫©n b·ªã")
                                        {
                                            <form asp-action="HuyDonHang" method="post">
                                                <input type="hidden" name="id" value="@hd.MaHoaDon" />
                                                <button type="submit" class="btn btn-primary">
                                                    H·ªßy ƒë∆°n
                                                </button>
                                            </form>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('searchInput').addEventListener('keyup', function() {
            var searchValue = this.value.toLowerCase();
            var rows = document.querySelectorAll('#orderTableBody tr'); // L·∫•y t·∫•t c·∫£ c√°c h√†ng trong b·∫£ng

            rows.forEach(function(row) {
                var rowText = row.textContent.toLowerCase(); // L·∫•y n·ªôi dung c·ªßa m·ªói h√†ng
                if (rowText.includes(searchValue)) {
                    row.style.display = ''; // Hi·ªÉn th·ªã n·∫øu c√≥ k·∫øt qu·∫£ t√¨m th·∫•y
                } else {
                    row.style.display = 'none'; // ·∫®n n·∫øu kh√¥ng c√≥ k·∫øt qu·∫£
                }
            });
        });
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.filter-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const status = this.getAttribute('data-status');
                    filterOrdersByStatus(status);
                });
            });

            updateDashboardCounts();
        });

        function filterOrdersByStatus(status) {
            document.querySelectorAll('.filter-btn').forEach(btn => {
                btn.classList.toggle('active', btn.getAttribute('data-status') === status);
            });

            const rows = document.querySelectorAll('#orderTableBody tr');

            rows.forEach(row => {
                const statusBadge = row.querySelector('.badge');
                const text = statusBadge ? statusBadge.textContent.trim() : '';
                const matches = status === 'all' || matchesStatus(text, status);
                row.style.display = matches ? '' : 'none';
            });

            updateDashboardCounts();
        }

        function matchesStatus(displayStatus, filterStatus) {
            const map = {
                'ƒêang chu·∫©n b·ªã': 'Preparing',
                'ƒêang giao h√†ng': 'Shipping',
                'ƒê√£ thanh to√°n': 'DaThanhToan',
                'Ho√†n th√†nh': 'HoanThanh',
                'ƒê√£ h·ªßy': 'Canceled'
            };
            return map[displayStatus] === filterStatus;
        }

        function updateDashboardCounts() {
            const visibleRows = [...document.querySelectorAll('#orderTableBody tr')].filter(row => row.style.display !== 'none');
            document.getElementById('totalOrders').textContent = visibleRows.length;

            const getCount = className => visibleRows.filter(row => row.querySelector(`.badge.${className}`)).length;

            document.getElementById('pendingOrders').textContent = getCount('badge-preparing') + getCount('badge-shipping');
            document.getElementById('completedOrders').textContent = getCount('badge-completed');
            document.getElementById('canceledOrders').textContent = getCount('badge-canceled');
        }
    </script>
    <style>
        :root {
            --primary: #4e73df;
            --secondary: #6c757d;
            --success: #1cc88a;
            --info: #36b9cc;
            --warning: #f6c23e;
            --danger: #e74a3b;
            --light: #f8f9fc;
            --dark: #5a5c69;
            --body-bg: #f8f9fc;
            --card-border-radius: 0.75rem;
            --transition-speed: 0.3s;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background-color: var(--body-bg);
            color: #333;
            padding-bottom: 2rem;
        }

        /* Alert Container */
        .alert-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            max-width: 350px;
        }

        .alert {
            animation: fadeOut 5s forwards;
            animation-delay: 3s;
            margin-bottom: 10px;
            box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.1);
            border-left: 4px solid;
        }

        .alert-success {
            border-left-color: var(--success);
        }

        .alert-danger {
            border-left-color: var(--danger);
        }

        keyframes fadeOut {
            from

        {
            opacity: 1;
        }

        to {
            opacity: 0;
            height: 0;
            padding: 0;
            margin: 0;
            overflow: hidden;
        }

        }

        /* Page Header */
        .page-header {
            margin-bottom: 1.5rem;
        }

        .search-container {
            width: 300px;
        }

            .search-container .input-group {
                box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
                border-radius: 50rem;
                overflow: hidden;
            }

            .search-container .input-group-text,
            .search-container .form-control {
                border-color: #e3e6f0;
            }

                .search-container .form-control:focus {
                    box-shadow: none;
                }

        /* Dashboard Summary */
        .dashboard-summary .summary-card {
            border-radius: var(--card-border-radius);
            padding: 1.5rem;
            display: flex;
            align-items: center;
            box-shadow: 0 0.15rem 1.75rem rgba(0, 0, 0, 0.15);
            transition: transform var(--transition-speed);
            height: 100%;
        }

            .dashboard-summary .summary-card:hover {
                transform: translateY(-5px);
            }

        .summary-icon {
            font-size: 2.5rem;
            margin-right: 1rem;
            opacity: 0.8;
        }

        .summary-info h3 {
            font-size: 2rem;
            font-weight: 700;
            margin: 0;
        }

        .summary-info p {
            margin: 0;
            opacity: 0.8;
            font-size: 0.9rem;
        }

        /* Filter Buttons */
        .filter-container {
            background-color: white;
            border-radius: var(--card-border-radius);
            padding: 1rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            gap: 1rem;
        }

        .filter-label {
            font-weight: 500;
            color: var(--dark);
        }

        .filter-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .filter-btn {
            border: none;
            background-color: #f1f3f9;
            color: var(--dark);
            padding: 0.5rem 1rem;
            border-radius: 50rem;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all var(--transition-speed);
        }

            .filter-btn:hover {
                background-color: #e3e6f0;
            }

            .filter-btn.active {
                background-color: var(--primary);
                color: white;
            }

        /* Table Styling */
        .card {
            border-radius: var(--card-border-radius);
            overflow: hidden;
        }

        .table {
            margin-bottom: 0;
        }

            .table thead {
                background-color: #f8f9fc;
            }

                .table thead th {
                    font-weight: 600;
                    color: var(--dark);
                    border-bottom: 2px solid #e3e6f0;
                    padding: 1rem;
                    font-size: 0.875rem;
                    text-transform: uppercase;
                    letter-spacing: 0.05em;
                }

            .table tbody td {
                padding: 1rem;
                border-bottom: 1px solid #e3e6f0;
                vertical-align: middle;
            }

            .table tbody tr:last-child td {
                border-bottom: none;
            }

            .table tbody tr:hover {
                background-color: rgba(78, 115, 223, 0.05);
            }

        /* Status Badges */
        .badge {
            font-size: 0.75rem;
            font-weight: 600;
            padding: 0.5rem 0.75rem;
            border-radius: 50rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            color: black;
        }

        .bg-success {
            background-color: var(--success) !important;
        }

        .bg-warning {
            background-color: var(--warning) !important;
        }

        .bg-danger {
            background-color: var(--danger) !important;
        }

        .bg-info {
            background-color: var(--info) !important;
        }

        .bg-secondary {
            background-color: var(--secondary) !important;
        }

        /* Action Buttons */
        .btn-warning, .btn-primary {
            border-radius: 50rem;
            font-size: 0.875rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all var(--transition-speed);
            margin-bottom: 0.5rem;
            width: auto;
        }

        .btn-warning {
            background-color: var(--primary);
            border-color: var(--primary);
            color: white;
        }

            .btn-warning:hover {
                background-color: #2e59d9;
                border-color: #2e59d9;
            }

        .btn-primary {
            background-color: white;
            border: 1px solid var(--danger);
            color: var(--danger);
        }

            .btn-primary:hover {
                background-color: var(--danger);
                border-color: var(--danger);
                color: white;
            }

        /* Avatar Circle */
        .avatar-circle {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        /* Responsive Adjustments */
        media (max-width: 992px) {
            .search-container

        {
            width: 100%;
            margin-top: 1rem;
        }

        .filter-container {
            flex-direction: column;
            align-items: flex-start;
        }

        .filter-buttons {
            width: 100%;
        }

        }

        media (max-width: 768px) {
            .dashboard-summary .summary-card

        {
            margin-bottom: 1rem;
        }

        .table thead th,
        .table tbody td {
            padding: 0.75rem;
        }

        .btn-warning, .btn-primary {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }

        }

        media (max-width: 576px) {
            .filter-buttons .btn

        {
            font-size: 0.8rem;
            padding: 0.375rem 0.5rem;
            min-width: auto;
        }

        }
    </style>
</body>
</html>